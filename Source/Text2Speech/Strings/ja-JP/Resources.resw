<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About.Label" xml:space="preserve">
    <value>について</value>
  </data>
  <data name="AboutMe.Label" xml:space="preserve">
    <value>作者について</value>
  </data>
  <data name="Alipay.Content" xml:space="preserve">
    <value>支付宝</value>
  </data>
  <data name="AppName.Text" xml:space="preserve">
    <value>音声合成器</value>
  </data>
  <data name="AppNameText" xml:space="preserve">
    <value>音声合成器</value>
    <comment>App Name</comment>
  </data>
  <data name="AuthorName.Text" xml:space="preserve">
    <value>张高兴</value>
  </data>
  <data name="ConvertPitch.Header" xml:space="preserve">
    <value>口調</value>
  </data>
  <data name="ConvertRate.Header" xml:space="preserve">
    <value>スピード</value>
  </data>
  <data name="ConvertText.Text" xml:space="preserve">
    <value>変換したテキスト</value>
  </data>
  <data name="ConvertVoice.Header" xml:space="preserve">
    <value>音声</value>
  </data>
  <data name="ConvertVolume.Header" xml:space="preserve">
    <value>音量</value>
  </data>
  <data name="Desc1.Text" xml:space="preserve">
    <value>张高兴致力于打造无内购、无广告的干净应用，在 UWP 这个小圈子里做出自己微小的贡献。</value>
  </data>
  <data name="Desc2.Text" xml:space="preserve">
    <value>如果您觉得本应用还不错的话，请捐助我。</value>
  </data>
  <data name="EMail.Text" xml:space="preserve">
    <value>メールを送る：</value>
  </data>
  <data name="EnableCortana.Label" xml:space="preserve">
    <value>Cortana 起用</value>
  </data>
  <data name="EnableDesc.Text" xml:space="preserve">
    <value>をしたいCortana音声合成エンジン？UWPに与えられた権限を完成しないこの項の操作であり、手作りの起用（これは、中国のために、しかし、他の言語は、同様のステップとして、ちょうどエンジン名変更）。</value>
  </data>
  <data name="EnableStep1.Text" xml:space="preserve">
    <value>1. 次のコードをコピー保存 .ps1 ファイルを使用PowerShell（管理）運行</value>
  </data>
  <data name="EnableStep2.Text" xml:space="preserve">
    <value>2. C：\ Windows \ SysWOW64 \ Speech_OneCore \ common \ zh-CN \ tokens_TTS_zh-CN.xml中のTokensノード内足を付ける内容は下記のとおり（必要するファイルの所有権を取得し、書き込み改正権限）</value>
  </data>
  <data name="EnableStep3.Text" xml:space="preserve">
    <value>3. 応用を再起動して、Microsoft Hongyuモバイルで</value>
  </data>
  <data name="Feedback.Text" xml:space="preserve">
    <value>フィードバック</value>
  </data>
  <data name="FileInput.Text" xml:space="preserve">
    <value>書類をこれに入れてください。</value>
  </data>
  <data name="FileInputText" xml:space="preserve">
    <value>書類をこれに入れてください。</value>
  </data>
  <data name="License.Text" xml:space="preserve">
    <value>本アプリケーション使用 MIT 許可オープンソース：</value>
  </data>
  <data name="Others.Text" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="Play.Text" xml:space="preserve">
    <value>放送</value>
  </data>
  <data name="Save.Text" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Sina.Text" xml:space="preserve">
    <value>新浪微博私信：</value>
  </data>
  <data name="Weixin.Content" xml:space="preserve">
    <value>微信</value>
  </data>
</root>